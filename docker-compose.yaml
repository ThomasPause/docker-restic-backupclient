# Demo / Template of how to integrate restic backup into docker compose deployment
--- 
version: '3'
services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2019-CU5-ubuntu-18.04
      # sudo docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=<YourStrong@Passw0rd>" \
      # -p 1433:1433 --name sql1 \
      # -d mcr.microsoft.com/mssql/server:2019-CU5-ubuntu-18.04
    # expose:
    # - "1433"
    ports:
    - "1433"
    environment:
      ACCEPT_EULA: "true"
      MSSQL_SA_PASSWORD: "s3cr3t!!"
    volumes:
      - ./data/mssql:/var/opt/mssql
      - ./data/backup:/backup
  mysql:
    image: mariadb:10.4
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: demo
      MYSQL_USER: demo
      MYSQL_PASSWORD: demo
      MYSQL_ROOT_PASSWORD: s3cr3t
    # volumes:
    #   - ./data/mysql:/var/lib/mysql
  restic:
    # image: evermind/restic-backupclient:latest
    build: 
      context: ./
      # dockerfile: Dockerfile
    image: restic-backupclient:latest
      

    environment:
      RESTIC_REPOSITORY: s3:https://my.s3compatiblevendor.tls/bucketpath
      RESTIC_PASSWORD: resticSecret
      BACKUP_HOSTNAME: resticHostname
      AWS_ACCESS_KEY_ID: S3AccessKey
      AWS_SECRET_ACCESS_KEY: S3Secret
      BACKUP_CONFIG: /scripts/config.yaml
    volumes:
      - ./config.yaml:/scripts/config.yaml
      - ./backup_client.py:/scripts_dev/backup_client.py
      - ./mysqldump.py:/scripts_dev/mysqldump.py
      - ./elasticdump.py:/scripts_dev/elasticdump.py
      - ./mongodump.py:/scripts_dev/mongodump.py
      - ./mssqldump.py:/scripts_dev/mssqldump.py
      - ./tester.py:/scripts_dev/tester.py
